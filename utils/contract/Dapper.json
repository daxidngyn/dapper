{
  "contractName": "Dapper",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_proxyRegistryAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getLastMintedTokenCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "tokensOfOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "dapTokens",
          "type": "uint256[]"
        }
      ],
      "name": "mintDap",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "withdrawAll",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "baseTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.3+commit.8dda9521\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_proxyRegistryAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastMintedTokenCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"dapTokens\",\"type\":\"uint256[]\"}],\"name\":\"mintDap\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"notice\":\"Override isApprovedForAll to whitelist user's OpenSea proxy accounts to enable gas-less listings.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/alex/Desktop/dapper/dapper_contract/contracts/Dapper.sol\":\"Dapper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/alex/Desktop/dapper/dapper_contract/contracts/Dapper.sol\":{\"keccak256\":\"0x770704364bbdb4c166a89b2facc951f5f1c938e8c6c441d60707f2c62e79809e\",\"urls\":[\"bzz-raw://40ce7d8381112aed0d30f666c295b00fff9be35672963fda27addbfcc84a5da5\",\"dweb:/ipfs/QmPAAi6Ay2wAietKKXknCpx1k6SJxH2pb58SAZsr47Sxe1\"]},\"/Users/alex/Desktop/dapper/dapper_contract/contracts/ERC721Tradable.sol\":{\"keccak256\":\"0x8f920bc15abbd53c4cf8ac30090820a305bbdd8810e92e1c06fd7b01af3af136\",\"urls\":[\"bzz-raw://afc8d715eaab2b9a40d744dd3649689006df92c93b579ebc78115b660f1dd0de\",\"dweb:/ipfs/QmddXe5HD3cW9a9F5EvLwYz4LvNodaAgVtwNQ2MzvRJwxU\"]},\"/Users/alex/Desktop/dapper/dapper_contract/contracts/Strings.sol\":{\"keccak256\":\"0x73d8270d3bebd3e43519aac55b2d51e631b9b407b726237a0612c59b6bc74b53\",\"urls\":[\"bzz-raw://16640a99481b9d93d6862aed74bf1c64aff73e6a28f6637ce77aeffe553bcc91\",\"dweb:/ipfs/QmWuWXtfpXyJRdmxTUQt8N662L1kij33vitRTxwEdrGQvX\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x24141d2f6b98d4cb77a8936eae8cbaad2e261d9062bdc08036096f4550092501\",\"urls\":[\"bzz-raw://b710eb003944777135f027500a5a57b479fe857849f5f467c1ef9687401e3c95\",\"dweb:/ipfs/QmcELzi6KRzAs3DXwxdsoKWRJ13KSeipKQsJgD3unctdZM\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"urls\":[\"bzz-raw://bd970f51e3a77790c2f02b5b1759827c3b897c3d98c407b3631e8af32e3dc93c\",\"dweb:/ipfs/QmPF85Amgbqjk3SNZKsPCsqCw8JfwYEPMnnhvMJUyX58je\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x118ed7540f56b21ff92e21ebaa73584048e98d2ac04ca67571329bb8dbd9032f\",\"urls\":[\"bzz-raw://da2918b7aff73dd51d41bfcfa548f81eb50531b8353500fdbdacf297076db070\",\"dweb:/ipfs/Qmb8ixAs1vBjZRowQNuNg6bRf2NZmgZ1JTBxmQS14PHpcL\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x2d99a0deb6648c34fbc66d6ac4a2d64798d7a5321b45624f6736fadc63da1962\",\"urls\":[\"bzz-raw://2dcdce5ede1e5e650d174ec0b35be7d47b6a50f30bc895ef0d9e59fb75052e45\",\"dweb:/ipfs/QmQ2XFsDLTYqfEdw7pYzHiGtFRY11yQm4b6ynYgKqDxeB8\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0xe6bd1b1218338b6f9fe17776f48623b4ac3d8a40405f74a44bc23c00abe2ca13\",\"urls\":[\"bzz-raw://0c354c3f6e9c487759aa7869be4fba68e0b2efc777b514d289c4cbd3ff8f7e1a\",\"dweb:/ipfs/QmdF9LcSYVmiUCL7JxLEYmSLrjga6zJsujfi6sgEJD4M1z\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xccb917776f826ac6b68bd5a15a5f711e3967848a52ba11e6104d9a4f593314a7\",\"urls\":[\"bzz-raw://430255ad2229ced6d880e61a67bdc6e48dbbaed8354a7c1fe918cd8b8714a886\",\"dweb:/ipfs/QmTHY56odzqEpEC6v6tafaWMYY7vmULw25q5XHJLCCAeox\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x52146049d6709c870e8ddcd988b5155cb6c5d640cfcd8978aee52bc1ba2ec4eb\",\"urls\":[\"bzz-raw://ada84513617b7c1b2f890b44503735abaec73a1acd030112a17aac7e6c66a4a1\",\"dweb:/ipfs/QmaiFwdio67iJrfjAdkMac24eJ5sS1qD7CZW6PhUU6KjiK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/utils/EnumerableMap.sol\":{\"keccak256\":\"0x4b087f06b6670a131a5a14e53b1d2a5ef19c034cc5ec42eeebcf9554325744ad\",\"urls\":[\"bzz-raw://f6a6af5d848334e40db419773f6360601e311ffc21c2e274f730b8c542da99fd\",\"dweb:/ipfs/QmfA24cxQ2g41ZWUuDF295dxDJ4xF1bSDYtC3EaLd7CzW8\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0x1562cd9922fbf739edfb979f506809e2743789cbde3177515542161c3d04b164\",\"urls\":[\"bzz-raw://4580d57781513d98870d9738c7d39094336e0a70cdb90d68dad549c6ced466ec\",\"dweb:/ipfs/Qmf9YZzzRFuvMnav9dgmeRUpdYMMECiZX8w25sHWVbA18V\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa1e12f97981f1d0964b1c048978606a57127c56c438bab61cdfe269cad859a74\",\"urls\":[\"bzz-raw://5eefac1760f524971e14aa3f3d79515a3d54fd28c1d3bdca0b36127da349b830\",\"dweb:/ipfs/QmUMzkyH3ytJX5gVPizQruNLhkKmuJb3nFqBDad4LPdg5U\"]}},\"version\":1}",
  "bytecode": "0x60806040526000600c553480156200001657600080fd5b5060405162003ab338038062003ab3833981810160405260208110156200003c57600080fd5b81019080805190602001909291905050506040518060400160405280600781526020017f44617070657273000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4441500000000000000000000000000000000000000000000000000000000000815250828282620000d46301ffc9a760e01b6200024c60201b60201c565b8160069080519060200190620000ec9291906200035d565b508060079080519060200190620001059291906200035d565b506200011e6380ac58cd60e01b6200024c60201b60201c565b62000136635b5e139f60e01b6200024c60201b60201c565b6200014e63780e9d6360e01b6200024c60201b60201c565b50506000620001626200035560201b60201c565b905080600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35080600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050506200040c565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620002e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433136353a20696e76616c696420696e746572666163652069640000000081525060200191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600033905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620003a057805160ff1916838001178555620003d1565b82800160010185558215620003d1579182015b82811115620003d0578251825591602001919060010190620003b3565b5b509050620003e09190620003e4565b5090565b6200040991905b8082111562000405576000816000905550600101620003eb565b5090565b90565b613697806200041c6000396000f3fe6080604052600436106101815760003560e01c8063715018a6116100d1578063a64bae401161008a578063d547cfb711610064578063d547cfb714610b61578063e8a3d48514610bf1578063e985e9c514610c81578063f2fde38b14610d0a57610181565b8063a64bae40146108e3578063b88d4fde1461099b578063c87b56dd14610aad57610181565b8063715018a6146106d85780638462151c146106ef578063853828b6146107955780638da5cb5b1461079f57806395d89b41146107f6578063a22cb4651461088657610181565b80632f745c591161013e5780634f6ccce7116101185780634f6ccce7146105195780636352211e146105685780636c0360eb146105e357806370a082311461067357610181565b80632f745c591461040457806342842e0e14610473578063472897c9146104ee57610181565b806301ffc9a71461018657806306fdde03146101f8578063081812fc14610288578063095ea7b31461030357806318160ddd1461035e57806323b872dd14610389575b600080fd5b34801561019257600080fd5b506101de600480360360208110156101a957600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610d5b565b604051808215151515815260200191505060405180910390f35b34801561020457600080fd5b5061020d610dc2565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561024d578082015181840152602081019050610232565b50505050905090810190601f16801561027a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561029457600080fd5b506102c1600480360360208110156102ab57600080fd5b8101908080359060200190929190505050610e64565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561030f57600080fd5b5061035c6004803603604081101561032657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610eff565b005b34801561036a57600080fd5b50610373611043565b6040518082815260200191505060405180910390f35b34801561039557600080fd5b50610402600480360360608110156103ac57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611054565b005b34801561041057600080fd5b5061045d6004803603604081101561042757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110ca565b6040518082815260200191505060405180910390f35b34801561047f57600080fd5b506104ec6004803603606081101561049657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611125565b005b3480156104fa57600080fd5b50610503611145565b6040518082815260200191505060405180910390f35b34801561052557600080fd5b506105526004803603602081101561053c57600080fd5b810190808035906020019092919050505061114f565b6040518082815260200191505060405180910390f35b34801561057457600080fd5b506105a16004803603602081101561058b57600080fd5b8101908080359060200190929190505050611172565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105ef57600080fd5b506105f86111a9565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561063857808201518184015260208101905061061d565b50505050905090810190601f1680156106655780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561067f57600080fd5b506106c26004803603602081101561069657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061124b565b6040518082815260200191505060405180910390f35b3480156106e457600080fd5b506106ed611320565b005b3480156106fb57600080fd5b5061073e6004803603602081101561071257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611490565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610781578082015181840152602081019050610766565b505050509050019250505060405180910390f35b61079d61155e565b005b3480156107ab57600080fd5b506107b461164d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561080257600080fd5b5061080b611677565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561084b578082015181840152602081019050610830565b50505050905090810190601f1680156108785780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561089257600080fd5b506108e1600480360360408110156108a957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611719565b005b610999600480360360208110156108f957600080fd5b810190808035906020019064010000000081111561091657600080fd5b82018360208201111561092857600080fd5b8035906020019184602083028401116401000000008311171561094a57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192905050506118d1565b005b3480156109a757600080fd5b50610aab600480360360808110156109be57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610a2557600080fd5b820183602082011115610a3757600080fd5b80359060200191846001830284011164010000000083111715610a5957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611916565b005b348015610ab957600080fd5b50610ae660048036036020811015610ad057600080fd5b810190808035906020019092919050505061198e565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610b26578082015181840152602081019050610b0b565b50505050905090810190601f168015610b535780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610b6d57600080fd5b50610b766119b0565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610bb6578082015181840152602081019050610b9b565b50505050905090810190601f168015610be35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610bfd57600080fd5b50610c066119d0565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610c46578082015181840152602081019050610c2b565b50505050905090810190601f168015610c735780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610c8d57600080fd5b50610cf060048036036040811015610ca457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119f0565b604051808215151515815260200191505060405180910390f35b348015610d1657600080fd5b50610d5960048036036020811015610d2d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b21565b005b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e5a5780601f10610e2f57610100808354040283529160200191610e5a565b820191906000526020600020905b815481529060010190602001808311610e3d57829003601f168201915b5050505050905090565b6000610e6f82611d16565b610ec4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180613558602c913960400191505060405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610f0a82611172565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f91576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806135da6021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610fb0611d33565b73ffffffffffffffffffffffffffffffffffffffff161480610fdf5750610fde81610fd9611d33565b611d3b565b5b611034576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001806134ab6038913960400191505060405180910390fd5b61103e8383611dcf565b505050565b600061104f6002611e88565b905090565b61106561105f611d33565b82611e9d565b6110ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806136316031913960400191505060405180910390fd5b6110c5838383611f91565b505050565b600061111d82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206121d490919063ffffffff16565b905092915050565b61114083838360405180602001604052806000815250611916565b505050565b6000600c54905090565b6000806111668360026121ee90919063ffffffff16565b50905080915050919050565b60006111a28260405180606001604052806029815260200161350d60299139600261221d9092919063ffffffff16565b9050919050565b606060098054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112415780601f1061121657610100808354040283529160200191611241565b820191906000526020600020905b81548152906001019060200180831161122457829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156112d2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806134e3602a913960400191505060405180910390fd5b611319600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061223c565b9050919050565b611328611d33565b73ffffffffffffffffffffffffffffffffffffffff1661134661164d565b73ffffffffffffffffffffffffffffffffffffffff16146113cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6060600061149d8361124b565b905060008114156114e15760006040519080825280602002602001820160405280156114d85781602001602082028036833780820191505090505b50915050611559565b6060816040519080825280602002602001820160405280156115125781602001602082028036833780820191505090505b50905060008090505b828110156115525761152d85826110ca565b82828151811061153957fe5b602002602001018181525050808060010191505061151b565b8193505050505b919050565b611566611d33565b73ffffffffffffffffffffffffffffffffffffffff1661158461164d565b73ffffffffffffffffffffffffffffffffffffffff161461160d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505061164b57600080fd5b565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060078054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561170f5780601f106116e45761010080835404028352916020019161170f565b820191906000526020600020905b8154815290600101906020018083116116f257829003601f168201915b5050505050905090565b611721611d33565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156117c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b80600560006117cf611d33565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff1661187c611d33565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b60008090505b8151811015611912576118fd338383815181106118f057fe5b6020026020010151612251565b61190561225f565b80806001019150506118d7565b5050565b611927611921611d33565b83611e9d565b61197c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806136316031913960400191505060405180910390fd5b61198884848484612273565b50505050565b60606119a961199b6119b0565b6119a4846122e5565b612412565b9050919050565b60606040518060600160405280602d81526020016135ad602d9139905090565b60606040518060600160405280603681526020016135fb60369139905090565b600080600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663c4552791866040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611aac57600080fd5b505afa158015611ac0573d6000803e3d6000fd5b505050506040513d6020811015611ad657600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff161415611b0d576001915050611b1b565b611b178484611d3b565b9150505b92915050565b611b29611d33565b73ffffffffffffffffffffffffffffffffffffffff16611b4761164d565b73ffffffffffffffffffffffffffffffffffffffff1614611bd0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611c56576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061340f6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000611d2c82600261245690919063ffffffff16565b9050919050565b600033905090565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16611e4283611172565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000611e9682600001612470565b9050919050565b6000611ea882611d16565b611efd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c81526020018061347f602c913960400191505060405180910390fd5b6000611f0883611172565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611f7757508373ffffffffffffffffffffffffffffffffffffffff16611f5f84610e64565b73ffffffffffffffffffffffffffffffffffffffff16145b80611f885750611f878185611d3b565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16611fb182611172565b73ffffffffffffffffffffffffffffffffffffffff161461201d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806135846029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156120a3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806134356024913960400191505060405180910390fd5b6120ae838383612481565b6120b9600082611dcf565b61210a81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061248690919063ffffffff16565b5061215c81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206124a090919063ffffffff16565b50612173818360026124ba9092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006121e383600001836124ef565b60001c905092915050565b6000806000806122018660000186612572565b915091508160001c8160001c8090509350935050509250929050565b6000612230846000018460001b8461260b565b60001c90509392505050565b600061224a82600001612701565b9050919050565b61225b3382612712565b5050565b600c60008154809291906001019190505550565b61227e848484611f91565b61228a84848484612730565b6122df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806133dd6032913960400191505060405180910390fd5b50505050565b6060600082141561232d576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061240d565b600082905060005b60008214612357578080600101915050600a828161234f57fe5b049150612335565b6060816040519080825280601f01601f19166020018201604052801561238c5781602001600182028036833780820191505090505b50905060006001830390505b6000861461240557600a86816123aa57fe5b0660300160f81b828280600190039350815181106123c457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a86816123fd57fe5b049550612398565b819450505050505b919050565b606061244e8383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250612975565b905092915050565b6000612468836000018360001b612c3b565b905092915050565b600081600001805490509050919050565b505050565b6000612498836000018360001b612c5e565b905092915050565b60006124b2836000018360001b612d46565b905092915050565b60006124e6846000018460001b8473ffffffffffffffffffffffffffffffffffffffff1660001b612db6565b90509392505050565b600081836000018054905011612550576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806133bb6022913960400191505060405180910390fd5b82600001828154811061255f57fe5b9060005260206000200154905092915050565b600080828460000180549050116125d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806135366022913960400191505060405180910390fd5b60008460000184815481106125e557fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b600080846001016000858152602001908152602001600020549050600081141583906126d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561269757808201518184015260208101905061267c565b50505050905090810190601f1680156126c45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b508460000160018203815481106126e557fe5b9060005260206000209060020201600101549150509392505050565b600081600001805490509050919050565b61272c828260405180602001604052806000815250612e92565b5050565b60006127518473ffffffffffffffffffffffffffffffffffffffff16612f03565b61275e576001905061296d565b60606128f463150b7a0260e01b612773611d33565b888787604051602401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612823578082015181840152602081019050612808565b50505050905090810190601f1680156128505780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518060600160405280603281526020016133dd603291398773ffffffffffffffffffffffffffffffffffffffff16612f169092919063ffffffff16565b9050600081806020019051602081101561290d57600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614925050505b949350505050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156129d15781602001600182028036833780820191505090505b5090506060819050600080905060008090505b8851811015612a52578881815181106129f957fe5b602001015160f81c60f81b838380600101945081518110612a1657fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506129e4565b5060008090505b8751811015612ac757878181518110612a6e57fe5b602001015160f81c60f81b838380600101945081518110612a8b57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612a59565b5060008090505b8651811015612b3c57868181518110612ae357fe5b602001015160f81c60f81b838380600101945081518110612b0057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612ace565b5060008090505b8551811015612bb157858181518110612b5857fe5b602001015160f81c60f81b838380600101945081518110612b7557fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612b43565b5060008090505b8451811015612c2657848181518110612bcd57fe5b602001015160f81c60f81b838380600101945081518110612bea57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612bb8565b50819850505050505050505095945050505050565b600080836001016000848152602001908152602001600020541415905092915050565b60008083600101600084815260200190815260200160002054905060008114612d3a5760006001820390506000600186600001805490500390506000866000018281548110612ca957fe5b9060005260206000200154905080876000018481548110612cc657fe5b9060005260206000200181905550600183018760010160008381526020019081526020016000208190555086600001805480612cfe57fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050612d40565b60009150505b92915050565b6000612d528383612f2e565b612dab578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612db0565b600090505b92915050565b6000808460010160008581526020019081526020016000205490506000811415612e5d57846000016040518060400160405280868152602001858152509080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001556020820151816001015550508460000180549050856001016000868152602001908152602001600020819055506001915050612e8b565b82856000016001830381548110612e7057fe5b90600052602060002090600202016001018190555060009150505b9392505050565b612e9c8383612f51565b612ea96000848484612730565b612efe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806133dd6032913960400191505060405180910390fd5b505050565b600080823b905060008111915050919050565b6060612f258484600085613145565b90509392505050565b600080836001016000848152602001908152602001600020541415905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612ff4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b612ffd81611d16565b15613070576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b61307c60008383612481565b6130cd81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206124a090919063ffffffff16565b506130e4818360026124ba9092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6060824710156131a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806134596026913960400191505060405180910390fd5b6131a985612f03565b61321b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b6020831061326b5780518252602082019150602081019050602083039250613248565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146132cd576040519150601f19603f3d011682016040523d82523d6000602084013e6132d2565b606091505b50915091506132e28282866132ee565b92505050949350505050565b606083156132fe578290506133b3565b6000835111156133115782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561337857808201518184015260208101905061335d565b50505050905090810190601f1680156133a55780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b939250505056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734552433732313a207472616e7366657220746f20746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e687474703a2f2f6461707065722d6261636b656e642e76657263656c2e6170702f6170692f6f70656e7365612f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572687474703a2f2f6461707065722d6261636b656e642e76657263656c2e6170702f6170692f6461707065724465736372697074696f6e4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a2646970667358221220e83ebe67723036d503108ae0540846a80cb2f77802362baf0d38978ba69ee00864736f6c63430006030033",
  "deployedBytecode": "0x6080604052600436106101815760003560e01c8063715018a6116100d1578063a64bae401161008a578063d547cfb711610064578063d547cfb714610b61578063e8a3d48514610bf1578063e985e9c514610c81578063f2fde38b14610d0a57610181565b8063a64bae40146108e3578063b88d4fde1461099b578063c87b56dd14610aad57610181565b8063715018a6146106d85780638462151c146106ef578063853828b6146107955780638da5cb5b1461079f57806395d89b41146107f6578063a22cb4651461088657610181565b80632f745c591161013e5780634f6ccce7116101185780634f6ccce7146105195780636352211e146105685780636c0360eb146105e357806370a082311461067357610181565b80632f745c591461040457806342842e0e14610473578063472897c9146104ee57610181565b806301ffc9a71461018657806306fdde03146101f8578063081812fc14610288578063095ea7b31461030357806318160ddd1461035e57806323b872dd14610389575b600080fd5b34801561019257600080fd5b506101de600480360360208110156101a957600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610d5b565b604051808215151515815260200191505060405180910390f35b34801561020457600080fd5b5061020d610dc2565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561024d578082015181840152602081019050610232565b50505050905090810190601f16801561027a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561029457600080fd5b506102c1600480360360208110156102ab57600080fd5b8101908080359060200190929190505050610e64565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561030f57600080fd5b5061035c6004803603604081101561032657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610eff565b005b34801561036a57600080fd5b50610373611043565b6040518082815260200191505060405180910390f35b34801561039557600080fd5b50610402600480360360608110156103ac57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611054565b005b34801561041057600080fd5b5061045d6004803603604081101561042757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110ca565b6040518082815260200191505060405180910390f35b34801561047f57600080fd5b506104ec6004803603606081101561049657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611125565b005b3480156104fa57600080fd5b50610503611145565b6040518082815260200191505060405180910390f35b34801561052557600080fd5b506105526004803603602081101561053c57600080fd5b810190808035906020019092919050505061114f565b6040518082815260200191505060405180910390f35b34801561057457600080fd5b506105a16004803603602081101561058b57600080fd5b8101908080359060200190929190505050611172565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105ef57600080fd5b506105f86111a9565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561063857808201518184015260208101905061061d565b50505050905090810190601f1680156106655780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561067f57600080fd5b506106c26004803603602081101561069657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061124b565b6040518082815260200191505060405180910390f35b3480156106e457600080fd5b506106ed611320565b005b3480156106fb57600080fd5b5061073e6004803603602081101561071257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611490565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610781578082015181840152602081019050610766565b505050509050019250505060405180910390f35b61079d61155e565b005b3480156107ab57600080fd5b506107b461164d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561080257600080fd5b5061080b611677565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561084b578082015181840152602081019050610830565b50505050905090810190601f1680156108785780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561089257600080fd5b506108e1600480360360408110156108a957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611719565b005b610999600480360360208110156108f957600080fd5b810190808035906020019064010000000081111561091657600080fd5b82018360208201111561092857600080fd5b8035906020019184602083028401116401000000008311171561094a57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192905050506118d1565b005b3480156109a757600080fd5b50610aab600480360360808110156109be57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610a2557600080fd5b820183602082011115610a3757600080fd5b80359060200191846001830284011164010000000083111715610a5957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611916565b005b348015610ab957600080fd5b50610ae660048036036020811015610ad057600080fd5b810190808035906020019092919050505061198e565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610b26578082015181840152602081019050610b0b565b50505050905090810190601f168015610b535780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610b6d57600080fd5b50610b766119b0565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610bb6578082015181840152602081019050610b9b565b50505050905090810190601f168015610be35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610bfd57600080fd5b50610c066119d0565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610c46578082015181840152602081019050610c2b565b50505050905090810190601f168015610c735780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610c8d57600080fd5b50610cf060048036036040811015610ca457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119f0565b604051808215151515815260200191505060405180910390f35b348015610d1657600080fd5b50610d5960048036036020811015610d2d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b21565b005b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e5a5780601f10610e2f57610100808354040283529160200191610e5a565b820191906000526020600020905b815481529060010190602001808311610e3d57829003601f168201915b5050505050905090565b6000610e6f82611d16565b610ec4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180613558602c913960400191505060405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610f0a82611172565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f91576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806135da6021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610fb0611d33565b73ffffffffffffffffffffffffffffffffffffffff161480610fdf5750610fde81610fd9611d33565b611d3b565b5b611034576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001806134ab6038913960400191505060405180910390fd5b61103e8383611dcf565b505050565b600061104f6002611e88565b905090565b61106561105f611d33565b82611e9d565b6110ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806136316031913960400191505060405180910390fd5b6110c5838383611f91565b505050565b600061111d82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206121d490919063ffffffff16565b905092915050565b61114083838360405180602001604052806000815250611916565b505050565b6000600c54905090565b6000806111668360026121ee90919063ffffffff16565b50905080915050919050565b60006111a28260405180606001604052806029815260200161350d60299139600261221d9092919063ffffffff16565b9050919050565b606060098054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112415780601f1061121657610100808354040283529160200191611241565b820191906000526020600020905b81548152906001019060200180831161122457829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156112d2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806134e3602a913960400191505060405180910390fd5b611319600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061223c565b9050919050565b611328611d33565b73ffffffffffffffffffffffffffffffffffffffff1661134661164d565b73ffffffffffffffffffffffffffffffffffffffff16146113cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6060600061149d8361124b565b905060008114156114e15760006040519080825280602002602001820160405280156114d85781602001602082028036833780820191505090505b50915050611559565b6060816040519080825280602002602001820160405280156115125781602001602082028036833780820191505090505b50905060008090505b828110156115525761152d85826110ca565b82828151811061153957fe5b602002602001018181525050808060010191505061151b565b8193505050505b919050565b611566611d33565b73ffffffffffffffffffffffffffffffffffffffff1661158461164d565b73ffffffffffffffffffffffffffffffffffffffff161461160d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505061164b57600080fd5b565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060078054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561170f5780601f106116e45761010080835404028352916020019161170f565b820191906000526020600020905b8154815290600101906020018083116116f257829003601f168201915b5050505050905090565b611721611d33565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156117c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b80600560006117cf611d33565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff1661187c611d33565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b60008090505b8151811015611912576118fd338383815181106118f057fe5b6020026020010151612251565b61190561225f565b80806001019150506118d7565b5050565b611927611921611d33565b83611e9d565b61197c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806136316031913960400191505060405180910390fd5b61198884848484612273565b50505050565b60606119a961199b6119b0565b6119a4846122e5565b612412565b9050919050565b60606040518060600160405280602d81526020016135ad602d9139905090565b60606040518060600160405280603681526020016135fb60369139905090565b600080600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663c4552791866040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611aac57600080fd5b505afa158015611ac0573d6000803e3d6000fd5b505050506040513d6020811015611ad657600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff161415611b0d576001915050611b1b565b611b178484611d3b565b9150505b92915050565b611b29611d33565b73ffffffffffffffffffffffffffffffffffffffff16611b4761164d565b73ffffffffffffffffffffffffffffffffffffffff1614611bd0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611c56576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061340f6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000611d2c82600261245690919063ffffffff16565b9050919050565b600033905090565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16611e4283611172565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000611e9682600001612470565b9050919050565b6000611ea882611d16565b611efd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c81526020018061347f602c913960400191505060405180910390fd5b6000611f0883611172565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611f7757508373ffffffffffffffffffffffffffffffffffffffff16611f5f84610e64565b73ffffffffffffffffffffffffffffffffffffffff16145b80611f885750611f878185611d3b565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16611fb182611172565b73ffffffffffffffffffffffffffffffffffffffff161461201d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806135846029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156120a3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806134356024913960400191505060405180910390fd5b6120ae838383612481565b6120b9600082611dcf565b61210a81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061248690919063ffffffff16565b5061215c81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206124a090919063ffffffff16565b50612173818360026124ba9092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006121e383600001836124ef565b60001c905092915050565b6000806000806122018660000186612572565b915091508160001c8160001c8090509350935050509250929050565b6000612230846000018460001b8461260b565b60001c90509392505050565b600061224a82600001612701565b9050919050565b61225b3382612712565b5050565b600c60008154809291906001019190505550565b61227e848484611f91565b61228a84848484612730565b6122df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806133dd6032913960400191505060405180910390fd5b50505050565b6060600082141561232d576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061240d565b600082905060005b60008214612357578080600101915050600a828161234f57fe5b049150612335565b6060816040519080825280601f01601f19166020018201604052801561238c5781602001600182028036833780820191505090505b50905060006001830390505b6000861461240557600a86816123aa57fe5b0660300160f81b828280600190039350815181106123c457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a86816123fd57fe5b049550612398565b819450505050505b919050565b606061244e8383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250612975565b905092915050565b6000612468836000018360001b612c3b565b905092915050565b600081600001805490509050919050565b505050565b6000612498836000018360001b612c5e565b905092915050565b60006124b2836000018360001b612d46565b905092915050565b60006124e6846000018460001b8473ffffffffffffffffffffffffffffffffffffffff1660001b612db6565b90509392505050565b600081836000018054905011612550576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806133bb6022913960400191505060405180910390fd5b82600001828154811061255f57fe5b9060005260206000200154905092915050565b600080828460000180549050116125d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806135366022913960400191505060405180910390fd5b60008460000184815481106125e557fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b600080846001016000858152602001908152602001600020549050600081141583906126d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561269757808201518184015260208101905061267c565b50505050905090810190601f1680156126c45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b508460000160018203815481106126e557fe5b9060005260206000209060020201600101549150509392505050565b600081600001805490509050919050565b61272c828260405180602001604052806000815250612e92565b5050565b60006127518473ffffffffffffffffffffffffffffffffffffffff16612f03565b61275e576001905061296d565b60606128f463150b7a0260e01b612773611d33565b888787604051602401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612823578082015181840152602081019050612808565b50505050905090810190601f1680156128505780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518060600160405280603281526020016133dd603291398773ffffffffffffffffffffffffffffffffffffffff16612f169092919063ffffffff16565b9050600081806020019051602081101561290d57600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614925050505b949350505050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156129d15781602001600182028036833780820191505090505b5090506060819050600080905060008090505b8851811015612a52578881815181106129f957fe5b602001015160f81c60f81b838380600101945081518110612a1657fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506129e4565b5060008090505b8751811015612ac757878181518110612a6e57fe5b602001015160f81c60f81b838380600101945081518110612a8b57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612a59565b5060008090505b8651811015612b3c57868181518110612ae357fe5b602001015160f81c60f81b838380600101945081518110612b0057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612ace565b5060008090505b8551811015612bb157858181518110612b5857fe5b602001015160f81c60f81b838380600101945081518110612b7557fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612b43565b5060008090505b8451811015612c2657848181518110612bcd57fe5b602001015160f81c60f81b838380600101945081518110612bea57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612bb8565b50819850505050505050505095945050505050565b600080836001016000848152602001908152602001600020541415905092915050565b60008083600101600084815260200190815260200160002054905060008114612d3a5760006001820390506000600186600001805490500390506000866000018281548110612ca957fe5b9060005260206000200154905080876000018481548110612cc657fe5b9060005260206000200181905550600183018760010160008381526020019081526020016000208190555086600001805480612cfe57fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050612d40565b60009150505b92915050565b6000612d528383612f2e565b612dab578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612db0565b600090505b92915050565b6000808460010160008581526020019081526020016000205490506000811415612e5d57846000016040518060400160405280868152602001858152509080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001556020820151816001015550508460000180549050856001016000868152602001908152602001600020819055506001915050612e8b565b82856000016001830381548110612e7057fe5b90600052602060002090600202016001018190555060009150505b9392505050565b612e9c8383612f51565b612ea96000848484612730565b612efe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806133dd6032913960400191505060405180910390fd5b505050565b600080823b905060008111915050919050565b6060612f258484600085613145565b90509392505050565b600080836001016000848152602001908152602001600020541415905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612ff4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b612ffd81611d16565b15613070576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b61307c60008383612481565b6130cd81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206124a090919063ffffffff16565b506130e4818360026124ba9092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6060824710156131a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806134596026913960400191505060405180910390fd5b6131a985612f03565b61321b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b6020831061326b5780518252602082019150602081019050602083039250613248565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146132cd576040519150601f19603f3d011682016040523d82523d6000602084013e6132d2565b606091505b50915091506132e28282866132ee565b92505050949350505050565b606083156132fe578290506133b3565b6000835111156133115782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561337857808201518184015260208101905061335d565b50505050905090810190601f1680156133a55780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b939250505056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734552433732313a207472616e7366657220746f20746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e687474703a2f2f6461707065722d6261636b656e642e76657263656c2e6170702f6170692f6f70656e7365612f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572687474703a2f2f6461707065722d6261636b656e642e76657263656c2e6170702f6170692f6461707065724465736372697074696f6e4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a2646970667358221220e83ebe67723036d503108ae0540846a80cb2f77802362baf0d38978ba69ee00864736f6c63430006030033",
  "sourceMap": "142:1477:0:-:0;;;609:1:1;572:38;;215:128:0;5:9:-1;2:2;;;27:1;24;17:12;2:2;215:128:0;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;215:128:0;;;;;;;;;;;;;;;;617:208:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;314:21:0;748:5:1;755:7;768:40:5;435:10;787:20;;768:18;;;:40;;:::i;:::-;3659:5:8;3651;:13;;;;;;;;;;;;:::i;:::-;;3684:7;3674;:17;;;;;;;;;;;;:::i;:::-;;3779:40;2742:10;3798:20;;3779:18;;;:40;;:::i;:::-;3829:49;3074:10;3848:29;;3829:18;;;:49;;:::i;:::-;3888:51;3447:10;3907:31;;3888:18;;;:51;;:::i;:::-;3577:369;;884:17:4;904:12;:10;;;:12;;:::i;:::-;884:32;;935:9;926:6;;:18;;;;;;;;;;;;;;;;;;992:9;959:43;;988:1;959:43;;;;;;;;;;;;850:159;797:21:1::1;774:20;;:44;;;;;;;;;;;;;;;;;;617:208:::0;;;215:128:0;142:1477;;1507:198:5;1605:10;1590:25;;:11;:25;;;;;1582:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1694:4;1658:20;:33;1679:11;1658:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1507:198;:::o;598:104:14:-;651:15;685:10;678:17;;598:104;:::o;142:1477:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "142:1477:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;965:148:5;;5:9:-1;2:2;;;27:1;24;17:12;2:2;965:148:5;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;965:148:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4517:98:8;;5:9:-1;2:2;;;27:1;24;17:12;2:2;4517:98:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4517:98:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7222:217;;5:9:-1;2:2;;;27:1;24;17:12;2:2;7222:217:8;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;7222:217:8;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6766:395;;5:9:-1;2:2;;;27:1;24;17:12;2:2;6766:395:8;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;6766:395:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6260:208;;5:9:-1;2:2;;;27:1;24;17:12;2:2;6260:208:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8086:300;;5:9:-1;2:2;;;27:1;24;17:12;2:2;8086:300:8;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;8086:300:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6029:160;;5:9:-1;2:2;;;27:1;24;17:12;2:2;6029:160:8;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;6029:160:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8452:149;;5:9:-1;2:2;;;27:1;24;17:12;2:2;8452:149:8;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;8452:149:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1248:107:1;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1248:107:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6540:169:8;;5:9:-1;2:2;;;27:1;24;17:12;2:2;6540:169:8;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;6540:169:8;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4280:175;;5:9:-1;2:2;;;27:1;24;17:12;2:2;4280:175:8;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;4280:175:8;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5855:95;;5:9:-1;2:2;;;27:1;24;17:12;2:2;5855:95:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5855:95:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4005:218;;5:9:-1;2:2;;;27:1;24;17:12;2:2;4005:218:8;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;4005:218:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1717:145:4;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1717:145:4;;;:::i;:::-;;349:518:0;;5:9:-1;2:2;;;27:1;24;17:12;2:2;349:518:0;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;349:518:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;349:518:0;;;;;;;;;;;;;;;;;1205:121;;;:::i;:::-;;1085:85:4;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1085:85:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4679:102:8;;5:9:-1;2:2;;;27:1;24;17:12;2:2;4679:102:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4679:102:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7506:290;;5:9:-1;2:2;;;27:1;24;17:12;2:2;7506:290:8;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;7506:290:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;874:208:0;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;874:208:0;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;874:208:0;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;874:208:0;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;874:208:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;874:208:0;;;;;;;;;;;;;;;:::i;:::-;;8667:282:8;;5:9:-1;2:2;;;27:1;24;17:12;2:2;8667:282:8;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;8667:282:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;8667:282:8;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;8667:282:8;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8667:282:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;8667:282:8;;;;;;;;;;;;;;;:::i;:::-;;1461:186:1;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1461:186:1;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1461:186:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1461:186:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1332:140:0;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1332:140:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1332:140:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1478:139;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1478:139:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1478:139:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1774:424:1;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1774:424:1;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1774:424:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2011:240:4;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2011:240:4;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2011:240:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;965:148:5;1050:4;1073:20;:33;1094:11;1073:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1066:40;;965:148;;;:::o;4517:98:8:-;4571:13;4603:5;4596:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4517:98;:::o;7222:217::-;7298:7;7325:16;7333:7;7325;:16::i;:::-;7317:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7408:15;:24;7424:7;7408:24;;;;;;;;;;;;;;;;;;;;;7401:31;;7222:217;;;:::o;6766:395::-;6846:13;6862:23;6877:7;6862:14;:23::i;:::-;6846:39;;6909:5;6903:11;;:2;:11;;;;6895:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6987:5;6971:21;;:12;:10;:12::i;:::-;:21;;;:69;;;;6996:44;7020:5;7027:12;:10;:12::i;:::-;6996:23;:44::i;:::-;6971:69;6963:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7133:21;7142:2;7146:7;7133:8;:21::i;:::-;6766:395;;;:::o;6260:208::-;6321:7;6440:21;:12;:19;:21::i;:::-;6433:28;;6260:208;:::o;8086:300::-;8245:41;8264:12;:10;:12::i;:::-;8278:7;8245:18;:41::i;:::-;8237:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8351:28;8361:4;8367:2;8371:7;8351:9;:28::i;:::-;8086:300;;;:::o;6029:160::-;6126:7;6152:30;6176:5;6152:13;:20;6166:5;6152:20;;;;;;;;;;;;;;;:23;;:30;;;;:::i;:::-;6145:37;;6029:160;;;;:::o;8452:149::-;8555:39;8572:4;8578:2;8582:7;8555:39;;;;;;;;;;;;:16;:39::i;:::-;8452:149;;;:::o;1248:107:1:-;1304:7;1330:18;;1323:25;;1248:107;:::o;6540:169:8:-;6615:7;6635:15;6656:22;6672:5;6656:12;:15;;:22;;;;:::i;:::-;6634:44;;;6695:7;6688:14;;;6540:169;;;:::o;4280:175::-;4352:7;4378:70;4395:7;4378:70;;;;;;;;;;;;;;;;;:12;:16;;:70;;;;;:::i;:::-;4371:77;;4280:175;;;:::o;5855:95::-;5903:13;5935:8;5928:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5855:95;:::o;4005:218::-;4077:7;4121:1;4104:19;;:5;:19;;;;4096:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4187:29;:13;:20;4201:5;4187:20;;;;;;;;;;;;;;;:27;:29::i;:::-;4180:36;;4005:218;;;:::o;1717:145:4:-;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1823:1:::1;1786:40;;1807:6;;;;;;;;;;;1786:40;;;;;;;;;;;;1853:1;1836:6;;:19;;;;;;;;;;;;;;;;;;1717:145::o:0;349:518:0:-;435:16;467:18;488:17;498:6;488:9;:17::i;:::-;467:38;;533:1;519:10;:15;515:346;;;571:1;557:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;125:4;109:14;101:6;88:42;156:4;148:6;144:17;134:27;;0:165;557:16:0;;;;550:23;;;;;515:346;604:23;644:10;630:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;125:4;109:14;101:6;88:42;156:4;148:6;144:17;134:27;;0:165;630:25:0;;;;604:51;;669:13;709:1;701:9;;696:128;720:10;712:5;:18;696:128;;;775:34;795:6;803:5;775:19;:34::i;:::-;759:6;766:5;759:13;;;;;;;;;;;;;:50;;;;;732:7;;;;;;;696:128;;;844:6;837:13;;;;;349:518;;;;:::o;1205:121::-;1308:12:4;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1279:10:0::1;1271:24;;:47;1296:21;1271:47;;;;;;;;;;;;;;;;;;;;;;;1263:56;;12:1:-1;9::::0;2:12:::1;1263:56:0;1205:121::o:0;1085:85:4:-;1131:7;1157:6;;;;;;;;;;;1150:13;;1085:85;:::o;4679:102:8:-;4735:13;4767:7;4760:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4679:102;:::o;7506:290::-;7620:12;:10;:12::i;:::-;7608:24;;:8;:24;;;;7600:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7718:8;7673:18;:32;7692:12;:10;:12::i;:::-;7673:32;;;;;;;;;;;;;;;:42;7706:8;7673:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;7770:8;7741:48;;7756:12;:10;:12::i;:::-;7741:48;;;7780:8;7741:48;;;;;;;;;;;;;;;;;;;;;;7506:290;;:::o;874:208:0:-;947:6;956:1;947:10;;942:134;963:9;:16;959:1;:20;942:134;;;998:35;1008:10;1020:9;1030:1;1020:12;;;;;;;;;;;;;;998:9;:35::i;:::-;1045:22;:20;:22::i;:::-;981:3;;;;;;;942:134;;;;874:208;:::o;8667:282:8:-;8798:41;8817:12;:10;:12::i;:::-;8831:7;8798:18;:41::i;:::-;8790:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8903:39;8917:4;8923:2;8927:7;8936:5;8903:13;:39::i;:::-;8667:282;;;;:::o;1461:186:1:-;1535:13;1567:73;1591:14;:12;:14::i;:::-;1607:32;1630:8;1607:22;:32::i;:::-;1567:23;:73::i;:::-;1560:80;;1461:186;;;:::o;1332:140:0:-;1386:13;1411:54;;;;;;;;;;;;;;;;;;;1332:140;:::o;1478:139::-;1522:13;1547:63;;;;;;;;;;;;;;;;;;;1478:139;:::o;1774:424:1:-;1887:4;1969:27;2013:20;;;;;;;;;;;1969:65;;2089:8;2048:49;;2056:13;:21;;;2078:5;2056:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2056:28:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2056:28:1;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2056:28:1;;;;;;;;;;;;;;;;2048:49;;;2044:91;;;2120:4;2113:11;;;;;2044:91;2152:39;2175:5;2182:8;2152:22;:39::i;:::-;2145:46;;;1774:424;;;;;:::o;2011:240:4:-;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2119:1:::1;2099:22;;:8;:22;;;;2091:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2208:8;2179:38;;2200:6;;;;;;;;;;;2179:38;;;;;;;;;;;;2236:8;2227:6;;:17;;;;;;;;;;;;;;;;;;2011:240:::0;:::o;10383:125:8:-;10448:4;10471:30;10493:7;10471:12;:21;;:30;;;;:::i;:::-;10464:37;;10383:125;;;:::o;598:104:14:-;651:15;685:10;678:17;;598:104;:::o;7862:162:8:-;7959:4;7982:18;:25;8001:5;7982:25;;;;;;;;;;;;;;;:35;8008:8;7982:35;;;;;;;;;;;;;;;;;;;;;;;;;7975:42;;7862:162;;;;:::o;16225:189::-;16326:2;16299:15;:24;16315:7;16299:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;16381:7;16377:2;16343:46;;16352:23;16367:7;16352:14;:23::i;:::-;16343:46;;;;;;;;;;;;16225:189;;:::o;7820:121:15:-;7889:7;7915:19;7923:3;:10;;7915:7;:19::i;:::-;7908:26;;7820:121;;;:::o;10666:351:8:-;10759:4;10783:16;10791:7;10783;:16::i;:::-;10775:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10858:13;10874:23;10889:7;10874:14;:23::i;:::-;10858:39;;10926:5;10915:16;;:7;:16;;;:51;;;;10959:7;10935:31;;:20;10947:7;10935:11;:20::i;:::-;:31;;;10915:51;:94;;;;10970:39;10994:5;11001:7;10970:23;:39::i;:::-;10915:94;10907:103;;;10666:351;;;;:::o;13707:584::-;13831:4;13804:31;;:23;13819:7;13804:14;:23::i;:::-;:31;;;13796:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13931:1;13917:16;;:2;:16;;;;13909:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13985:39;14006:4;14012:2;14016:7;13985:20;:39::i;:::-;14086:29;14103:1;14107:7;14086:8;:29::i;:::-;14126:35;14153:7;14126:13;:19;14140:4;14126:19;;;;;;;;;;;;;;;:26;;:35;;;;:::i;:::-;;14171:30;14193:7;14171:13;:17;14185:2;14171:17;;;;;;;;;;;;;;;:21;;:30;;;;:::i;:::-;;14212:29;14229:7;14238:2;14212:12;:16;;:29;;;;;:::i;:::-;;14276:7;14272:2;14257:27;;14266:4;14257:27;;;;;;;;;;;;13707:584;;;:::o;9250:135:16:-;9321:7;9355:22;9359:3;:10;;9371:5;9355:3;:22::i;:::-;9347:31;;9340:38;;9250:135;;;;:::o;8269:233:15:-;8349:7;8358;8378:11;8391:13;8408:22;8412:3;:10;;8424:5;8408:3;:22::i;:::-;8377:53;;;;8456:3;8448:12;;8486:5;8478:14;;8440:55;;;;;;;;;8269:233;;;;;:::o;9522:211::-;9629:7;9679:44;9684:3;:10;;9704:3;9696:12;;9710;9679:4;:44::i;:::-;9671:53;;9648:78;;9522:211;;;;;:::o;8806:112:16:-;8866:7;8892:19;8900:3;:10;;8892:7;:19::i;:::-;8885:26;;8806:112;;;:::o;1089:110:0:-;1159:33;1169:10;1181;1159:9;:33::i;:::-;1089:110;;:::o;1164:78:1:-;1215:18;;:20;;;;;;;;;;;;;1164:78::o;9811:269:8:-;9924:28;9934:4;9940:2;9944:7;9924:9;:28::i;:::-;9970:48;9993:4;9999:2;10003:7;10012:5;9970:22;:48::i;:::-;9962:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9811:269;;;;:::o;1539:465:3:-;1589:27;1638:1;1632:2;:7;1628:48;;;1655:10;;;;;;;;;;;;;;;;;;;;;1628:48;1685:6;1694:2;1685:11;;1706:8;1724:66;1736:1;1731;:6;1724:66;;1753:5;;;;;;;1777:2;1772:7;;;;;;;;;1724:66;;;1799:17;1829:3;1819:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;124:4;108:14;100:6;87:42;155:4;147:6;143:17;133:27;;0:164;1819:14:3;;;;1799:34;;1843:6;1858:1;1852:3;:7;1843:16;;1869:100;1882:1;1876:2;:7;1869:100;;1932:2;1927;:7;;;;;;1922:2;:12;1911:25;;1899:4;1904:3;;;;;;;1899:9;;;;;;;;;;;:37;;;;;;;;;;;1956:2;1950:8;;;;;;;;;1869:100;;;1992:4;1978:19;;;;;;1539:465;;;;:::o;1387:146::-;1465:13;1497:29;1507:2;1511;1497:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;1490:36;;1387:146;;;;:::o;7588:149:15:-;7672:4;7695:35;7705:3;:10;;7725:3;7717:12;;7695:9;:35::i;:::-;7688:42;;7588:149;;;;:::o;4491:108::-;4547:7;4573:3;:12;;:19;;;;4566:26;;4491:108;;;:::o;17010:93:8:-;;;;:::o;8365:135:16:-;8435:4;8458:35;8466:3;:10;;8486:5;8478:14;;8458:7;:35::i;:::-;8451:42;;8365:135;;;;:::o;8068:129::-;8135:4;8158:32;8163:3;:10;;8183:5;8175:14;;8158:4;:32::i;:::-;8151:39;;8068:129;;;;:::o;7027:183:15:-;7116:4;7139:64;7144:3;:10;;7164:3;7156:12;;7194:5;7178:23;;7170:32;;7139:4;:64::i;:::-;7132:71;;7027:183;;;;;:::o;4452:201:16:-;4519:7;4567:5;4546:3;:11;;:18;;;;:26;4538:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4628:3;:11;;4640:5;4628:18;;;;;;;;;;;;;;;;4621:25;;4452:201;;;;:::o;4942:274:15:-;5009:7;5018;5067:5;5045:3;:12;;:19;;;;:27;5037:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5122:22;5147:3;:12;;5160:5;5147:19;;;;;;;;;;;;;;;;;;5122:44;;5184:5;:10;;;5196:5;:12;;;5176:33;;;;;4942:274;;;;;:::o;6403:315::-;6497:7;6516:16;6535:3;:12;;:17;6548:3;6535:17;;;;;;;;;;;;6516:36;;6582:1;6570:8;:13;;6585:12;6562:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6562:36:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6651:3;:12;;6675:1;6664:8;:12;6651:26;;;;;;;;;;;;;;;;;;:33;;;6644:40;;;6403:315;;;;;:::o;4013:107:16:-;4069:7;4095:3;:11;;:18;;;;4088:25;;4013:107;;;:::o;11348:108:8:-;11423:26;11433:2;11437:7;11423:26;;;;;;;;;;;;:9;:26::i;:::-;11348:108;;:::o;15524:589::-;15644:4;15669:15;:2;:13;;;:15::i;:::-;15664:58;;15707:4;15700:11;;;;15664:58;15731:23;15757:246;15809:45;;;15868:12;:10;:12::i;:::-;15894:4;15912:7;15933:5;15773:175;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;15773:175:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;15773:175:8;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;15773:175:8;15757:246;;;;;;;;;;;;;;;;;:2;:15;;;;:246;;;;;:::i;:::-;15731:272;;16013:13;16040:10;16029:32;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;16029:32:8;;;;;;;;;;;;;;;;16013:48;;1078:10;16089:16;;16079:26;;;:6;:26;;;;16071:35;;;;15524:589;;;;;;;:::o;166:857:3:-;298:13;321:16;346:2;321:28;;357:16;382:2;357:28;;393:16;418:2;393:28;;429:16;454:2;429:28;;465:16;490:2;465:28;;501:19;586:3;:10;573:3;:10;560:3;:10;547:3;:10;534:3;:10;:23;:36;:49;:62;523:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;124:4;108:14;100:6;87:42;155:4;147:6;143:17;133:27;;0:164;523:74:3;;;;501:96;;605:19;633:5;605:34;;647:6;656:1;647:10;;670:6;679:1;670:10;;665:58;686:3;:10;682:1;:14;665:58;;;717:3;721:1;717:6;;;;;;;;;;;;;;;;703;710:3;;;;;;703:11;;;;;;;;;;;:20;;;;;;;;;;;698:3;;;;;;;665:58;;;;736:6;745:1;736:10;;731:58;752:3;:10;748:1;:14;731:58;;;783:3;787:1;783:6;;;;;;;;;;;;;;;;769;776:3;;;;;;769:11;;;;;;;;;;;:20;;;;;;;;;;;764:3;;;;;;;731:58;;;;802:6;811:1;802:10;;797:58;818:3;:10;814:1;:14;797:58;;;849:3;853:1;849:6;;;;;;;;;;;;;;;;835;842:3;;;;;;835:11;;;;;;;;;;;:20;;;;;;;;;;;830:3;;;;;;;797:58;;;;868:6;877:1;868:10;;863:58;884:3;:10;880:1;:14;863:58;;;915:3;919:1;915:6;;;;;;;;;;;;;;;;901;908:3;;;;;;901:11;;;;;;;;;;;:20;;;;;;;;;;;896:3;;;;;;;863:58;;;;934:6;943:1;934:10;;929:58;950:3;:10;946:1;:14;929:58;;;981:3;985:1;981:6;;;;;;;;;;;;;;;;967;974:3;;;;;;967:11;;;;;;;;;;;:20;;;;;;;;;;;962:3;;;;;;;929:58;;;;1009:6;995:21;;;;;;;;;;166:857;;;;;;;:::o;4278:123:15:-;4349:4;4393:1;4372:3;:12;;:17;4385:3;4372:17;;;;;;;;;;;;:22;;4365:29;;4278:123;;;;:::o;2212:1512:16:-;2278:4;2394:18;2415:3;:12;;:19;2428:5;2415:19;;;;;;;;;;;;2394:40;;2463:1;2449:10;:15;2445:1273;;2806:21;2843:1;2830:10;:14;2806:38;;2858:17;2899:1;2878:3;:11;;:18;;;;:22;2858:42;;3140:17;3160:3;:11;;3172:9;3160:22;;;;;;;;;;;;;;;;3140:42;;3303:9;3274:3;:11;;3286:13;3274:26;;;;;;;;;;;;;;;:38;;;;3420:1;3404:13;:17;3378:3;:12;;:23;3391:9;3378:23;;;;;;;;;;;:43;;;;3527:3;:11;;:17;;;;;;;;;;;;;;;;;;;;;;;;3619:3;:12;;:19;3632:5;3619:19;;;;;;;;;;;3612:26;;;3660:4;3653:11;;;;;;;;2445:1273;3702:5;3695:12;;;2212:1512;;;;;:::o;1640:404::-;1703:4;1724:21;1734:3;1739:5;1724:9;:21::i;:::-;1719:319;;1761:3;:11;;1778:5;1761:23;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1761:23:16;;;;;;;;;;;;;;;;;;;1941:3;:11;;:18;;;;1919:3;:12;;:19;1932:5;1919:19;;;;;;;;;;;:40;;;;1980:4;1973:11;;;;1719:319;2022:5;2015:12;;1640:404;;;;;:::o;1836:678:15:-;1912:4;2026:16;2045:3;:12;;:17;2058:3;2045:17;;;;;;;;;;;;2026:36;;2089:1;2077:8;:13;2073:435;;;2143:3;:12;;2161:38;;;;;;;;2178:3;2161:38;;;;2191:5;2161:38;;;2143:57;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2143:57:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2355:3;:12;;:19;;;;2335:3;:12;;:17;2348:3;2335:17;;;;;;;;;;;:39;;;;2395:4;2388:11;;;;;2073:435;2466:5;2430:3;:12;;2454:1;2443:8;:12;2430:26;;;;;;;;;;;;;;;;;;:33;;:41;;;;2492:5;2485:12;;;1836:678;;;;;;:::o;11677:247:8:-;11772:18;11778:2;11782:7;11772:5;:18::i;:::-;11808:54;11839:1;11843:2;11847:7;11856:5;11808:22;:54::i;:::-;11800:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11677:247;;;:::o;726:413:13:-;786:4;989:12;1098:7;1086:20;1078:28;;1131:1;1124:4;:8;1117:15;;;726:413;;;:::o;3581:193::-;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3715:21;:52::i;:::-;3708:59;;3581:193;;;;;:::o;3805:127:16:-;3878:4;3924:1;3901:3;:12;;:19;3914:5;3901:19;;;;;;;;;;;;:24;;3894:31;;3805:127;;;;:::o;12246:393:8:-;12339:1;12325:16;;:2;:16;;;;12317:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12397:16;12405:7;12397;:16::i;:::-;12396:17;12388:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12457:45;12486:1;12490:2;12494:7;12457:20;:45::i;:::-;12513:30;12535:7;12513:13;:17;12527:2;12513:17;;;;;;;;;;;;;;;:21;;:30;;;;:::i;:::-;;12554:29;12571:7;12580:2;12554:12;:16;;:29;;;;;:::i;:::-;;12624:7;12620:2;12599:33;;12616:1;12599:33;;;;;;;;;;;;12246:393;;:::o;4608:523:13:-;4735:12;4792:5;4767:21;:30;;4759:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4981:12;4995:23;5022:6;:11;;5042:5;5050:4;5022:33;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;5022:33:13;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;4980:75:13;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;:::-;5065:59;;;;4608:523;;;;;;:::o;7091:725::-;7206:12;7234:7;7230:580;;;7264:10;7257:17;;;;7230:580;7395:1;7375:10;:17;:21;7371:429;;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7765:20:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7091:725;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >0.6.2;\nimport \"./ERC721Tradable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract Dapper is ERC721Tradable {\n    using SafeMath for uint256;\n\n    constructor(address _proxyRegistryAddress)\n        public\n        ERC721Tradable(\"Dappers\", \"DAP\", _proxyRegistryAddress)\n    {}\n\n    function tokensOfOwner(address _owner)\n        external\n        view\n        returns (uint256[] memory)\n    {\n        uint256 tokenCount = balanceOf(_owner);\n        if (tokenCount == 0) {\n            return new uint256[](0);\n        } else {\n            uint256[] memory result = new uint256[](tokenCount);\n            uint256 index;\n            for (index = 0; index < tokenCount; index++) {\n                result[index] = tokenOfOwnerByIndex(_owner, index);\n            }\n            return result;\n        }\n    }\n\n     function mintDap(uint256[] memory dapTokens) public payable {\n      for (uint i = 0; i < dapTokens.length; i++) {\n          mintToken(msg.sender, dapTokens[i]);\n          _incrementTokenCount();\n      }\n    }\n\n\n    function mintToken(address _to, uint256 dapTokenId) private {\n        _safeMint(msg.sender, dapTokenId);\n    }\n\n    function withdrawAll() public payable onlyOwner {\n        require(payable(msg.sender).send(address(this).balance));\n    }\n\n    function baseTokenURI() public pure override returns (string memory) {\n        return \"http://dapper-backend.vercel.app/api/opensea/\";\n    }\n\n    function contractURI() public view returns (string memory) {\n        return \"http://dapper-backend.vercel.app/api/dapperDescription\";\n    }\n}",
  "sourcePath": "/Users/alex/Desktop/dapper/dapper_contract/contracts/Dapper.sol",
  "ast": {
    "absolutePath": "/Users/alex/Desktop/dapper/dapper_contract/contracts/Dapper.sol",
    "exportedSymbols": {
      "Dapper": [
        167
      ]
    },
    "id": 168,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:0"
      },
      {
        "absolutePath": "/Users/alex/Desktop/dapper/dapper_contract/contracts/ERC721Tradable.sol",
        "file": "./ERC721Tradable.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 168,
        "sourceUnit": 303,
        "src": "57:30:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 168,
        "sourceUnit": 890,
        "src": "88:52:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "ERC721Tradable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 302,
              "src": "161:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Tradable_$302",
                "typeString": "contract ERC721Tradable"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "161:14:0"
          }
        ],
        "contractDependencies": [
          302,
          889,
          945,
          957,
          2256,
          2372,
          2403,
          2430,
          2767
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 167,
        "linearizedBaseContracts": [
          167,
          302,
          889,
          2256,
          2403,
          2430,
          2372,
          945,
          957,
          2767
        ],
        "name": "Dapper",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 8,
            "libraryName": {
              "contractScope": null,
              "id": 6,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1312,
              "src": "188:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1312",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "182:27:0",
            "typeName": {
              "id": 7,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "201:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 18,
              "nodeType": "Block",
              "src": "341:2:0",
              "statements": []
            },
            "documentation": null,
            "id": 19,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "44617070657273",
                    "id": 13,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "296:9:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_44938e3a16b2840374eb8ed73c463e88cffc09bd211e1f451bcb7703d6a1312e",
                      "typeString": "literal_string \"Dappers\""
                    },
                    "value": "Dappers"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "444150",
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "307:5:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a030a69a9c8729012416f9b69eee6a7aca7d4d37d9200344940dcbd03f67d7e6",
                      "typeString": "literal_string \"DAP\""
                    },
                    "value": "DAP"
                  },
                  {
                    "argumentTypes": null,
                    "id": 15,
                    "name": "_proxyRegistryAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10,
                    "src": "314:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 16,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12,
                  "name": "ERC721Tradable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 302,
                  "src": "281:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Tradable_$302_$",
                    "typeString": "type(contract ERC721Tradable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "281:55:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10,
                  "name": "_proxyRegistryAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 19,
                  "src": "227:29:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "227:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "226:31:0"
            },
            "returnParameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "341:0:0"
            },
            "scope": 167,
            "src": "215:128:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 82,
              "nodeType": "Block",
              "src": "457:410:0",
              "statements": [
                {
                  "assignments": [
                    28
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28,
                      "name": "tokenCount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 82,
                      "src": "467:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 27,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "467:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 32,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 30,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "498:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 29,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1444,
                      "src": "488:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 31,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "488:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "467:38:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 33,
                      "name": "tokenCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "519:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 34,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "533:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "519:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 80,
                    "nodeType": "Block",
                    "src": "590:271:0",
                    "statements": [
                      {
                        "assignments": [
                          47
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 47,
                            "name": "result",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 80,
                            "src": "604:23:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 45,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "604:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 46,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "604:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 53,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 51,
                              "name": "tokenCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28,
                              "src": "644:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 50,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "630:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 48,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "634:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 49,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "634:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 52,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "630:25:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "604:51:0"
                      },
                      {
                        "assignments": [
                          55
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 55,
                            "name": "index",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 80,
                            "src": "669:13:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 54,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "669:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 56,
                        "initialValue": null,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "669:13:0"
                      },
                      {
                        "body": {
                          "id": 76,
                          "nodeType": "Block",
                          "src": "741:83:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 74,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 67,
                                    "name": "result",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 47,
                                    "src": "759:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 69,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 68,
                                    "name": "index",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 55,
                                    "src": "766:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "759:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 71,
                                      "name": "_owner",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 21,
                                      "src": "795:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "argumentTypes": null,
                                      "id": 72,
                                      "name": "index",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 55,
                                      "src": "803:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 70,
                                    "name": "tokenOfOwnerByIndex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1576,
                                    "src": "775:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (address,uint256) view returns (uint256)"
                                    }
                                  },
                                  "id": 73,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "775:34:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "759:50:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 75,
                              "nodeType": "ExpressionStatement",
                              "src": "759:50:0"
                            }
                          ]
                        },
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 63,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 61,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "712:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 62,
                            "name": "tokenCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "720:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "712:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 77,
                        "initializationExpression": {
                          "expression": {
                            "argumentTypes": null,
                            "id": 59,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "argumentTypes": null,
                              "id": 57,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55,
                              "src": "701:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 58,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "709:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "701:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 60,
                          "nodeType": "ExpressionStatement",
                          "src": "701:9:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "argumentTypes": null,
                            "id": 65,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "732:7:0",
                            "subExpression": {
                              "argumentTypes": null,
                              "id": 64,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55,
                              "src": "732:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 66,
                          "nodeType": "ExpressionStatement",
                          "src": "732:7:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "696:128:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 78,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "844:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "functionReturnParameters": 26,
                        "id": 79,
                        "nodeType": "Return",
                        "src": "837:13:0"
                      }
                    ]
                  },
                  "id": 81,
                  "nodeType": "IfStatement",
                  "src": "515:346:0",
                  "trueBody": {
                    "id": 42,
                    "nodeType": "Block",
                    "src": "536:48:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 39,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "571:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 38,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "557:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 36,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "561:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 37,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "561:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 40,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "557:16:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "functionReturnParameters": 26,
                        "id": 41,
                        "nodeType": "Return",
                        "src": "550:23:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8462151c",
            "id": 83,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokensOfOwner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 83,
                  "src": "372:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "372:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "371:16:0"
            },
            "returnParameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 83,
                  "src": "435:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 23,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "435:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "435:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "434:18:0"
            },
            "scope": 167,
            "src": "349:518:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 113,
              "nodeType": "Block",
              "src": "934:148:0",
              "statements": [
                {
                  "body": {
                    "id": 111,
                    "nodeType": "Block",
                    "src": "986:90:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 101,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1008:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 102,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1008:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 103,
                                "name": "dapTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86,
                                "src": "1020:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 105,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 104,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 90,
                                "src": "1030:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1020:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 100,
                            "name": "mintToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "998:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "998:35:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 107,
                        "nodeType": "ExpressionStatement",
                        "src": "998:35:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 108,
                            "name": "_incrementTokenCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 229,
                            "src": "1045:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1045:22:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 110,
                        "nodeType": "ExpressionStatement",
                        "src": "1045:22:0"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 93,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90,
                      "src": "959:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 94,
                        "name": "dapTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "963:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 95,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "963:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "959:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 112,
                  "initializationExpression": {
                    "assignments": [
                      90
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 90,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 112,
                        "src": "947:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 89,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "947:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 92,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 91,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "956:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "947:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 98,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "981:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 97,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90,
                        "src": "981:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 99,
                    "nodeType": "ExpressionStatement",
                    "src": "981:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "942:134:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a64bae40",
            "id": 114,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintDap",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86,
                  "name": "dapTokens",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 114,
                  "src": "891:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 84,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "891:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 85,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "891:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "890:28:0"
            },
            "returnParameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "934:0:0"
            },
            "scope": 167,
            "src": "874:208:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 127,
              "nodeType": "Block",
              "src": "1149:50:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 122,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1169:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1169:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 124,
                        "name": "dapTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "1181:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 121,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1900,
                        1929
                      ],
                      "referencedDeclaration": 1900,
                      "src": "1159:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1159:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "1159:33:0"
                }
              ]
            },
            "documentation": null,
            "id": 128,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintToken",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 128,
                  "src": "1108:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1108:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 118,
                  "name": "dapTokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 128,
                  "src": "1121:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1121:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1107:33:0"
            },
            "returnParameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1149:0:0"
            },
            "scope": 167,
            "src": "1089:110:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 148,
              "nodeType": "Block",
              "src": "1253:73:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 142,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1304:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Dapper_$167",
                                    "typeString": "contract Dapper"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Dapper_$167",
                                    "typeString": "contract Dapper"
                                  }
                                ],
                                "id": 141,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1296:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 140,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1296:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 143,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1296:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1296:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 136,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1279:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 137,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1279:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 135,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1271:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 134,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1271:8:0",
                                "stateMutability": "payable",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1271:19:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "send",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1271:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) returns (bool)"
                          }
                        },
                        "id": 145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1271:47:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 133,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1263:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1263:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "1263:56:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "853828b6",
            "id": 149,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 131,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 130,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 838,
                  "src": "1243:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1243:9:0"
              }
            ],
            "name": "withdrawAll",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1225:2:0"
            },
            "returnParameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1253:0:0"
            },
            "scope": 167,
            "src": "1205:121:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              245
            ],
            "body": {
              "id": 157,
              "nodeType": "Block",
              "src": "1401:71:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "687474703a2f2f6461707065722d6261636b656e642e76657263656c2e6170702f6170692f6f70656e7365612f",
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1418:47:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b0b68707b1ab4895cd740f6729704eecebe8e8d13d71b9e5e6772e74b8bb65b5",
                      "typeString": "literal_string \"http://dapper-backend.vercel.app/api/opensea/\""
                    },
                    "value": "http://dapper-backend.vercel.app/api/opensea/"
                  },
                  "functionReturnParameters": 154,
                  "id": 156,
                  "nodeType": "Return",
                  "src": "1411:54:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d547cfb7",
            "id": 158,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "baseTokenURI",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 151,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1368:8:0"
            },
            "parameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1353:2:0"
            },
            "returnParameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 158,
                  "src": "1386:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1386:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1385:15:0"
            },
            "scope": 167,
            "src": "1332:140:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 165,
              "nodeType": "Block",
              "src": "1537:80:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "687474703a2f2f6461707065722d6261636b656e642e76657263656c2e6170702f6170692f6461707065724465736372697074696f6e",
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1554:56:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c55d29ae2e816aad4c57522251ab6b6c1976ac52e4564c4b782d2ed8a3d177d1",
                      "typeString": "literal_string \"http://dapper-backend.vercel.app/api/dapperDescription\""
                    },
                    "value": "http://dapper-backend.vercel.app/api/dapperDescription"
                  },
                  "functionReturnParameters": 162,
                  "id": 164,
                  "nodeType": "Return",
                  "src": "1547:63:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e8a3d485",
            "id": 166,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractURI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1498:2:0"
            },
            "returnParameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 166,
                  "src": "1522:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1522:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1521:15:0"
            },
            "scope": 167,
            "src": "1478:139:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 168,
        "src": "142:1477:0"
      }
    ],
    "src": "33:1586:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/alex/Desktop/dapper/dapper_contract/contracts/Dapper.sol",
      "exportedSymbols": {
        "Dapper": [
          167
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">",
            "0.6",
            ".2"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "33:23:0"
      },
      {
        "attributes": {
          "SourceUnit": 303,
          "absolutePath": "/Users/alex/Desktop/dapper/dapper_contract/contracts/ERC721Tradable.sol",
          "file": "./ERC721Tradable.sol",
          "scope": 168,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2,
        "name": "ImportDirective",
        "src": "57:30:0"
      },
      {
        "attributes": {
          "SourceUnit": 890,
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "file": "@openzeppelin/contracts/access/Ownable.sol",
          "scope": 168,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3,
        "name": "ImportDirective",
        "src": "88:52:0"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            302,
            889,
            945,
            957,
            2256,
            2372,
            2403,
            2430,
            2767
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            167,
            302,
            889,
            2256,
            2403,
            2430,
            2372,
            945,
            957,
            2767
          ],
          "name": "Dapper",
          "scope": 168
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721Tradable",
                  "referencedDeclaration": 302,
                  "type": "contract ERC721Tradable"
                },
                "id": 4,
                "name": "UserDefinedTypeName",
                "src": "161:14:0"
              }
            ],
            "id": 5,
            "name": "InheritanceSpecifier",
            "src": "161:14:0"
          },
          {
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "SafeMath",
                  "referencedDeclaration": 1312,
                  "type": "library SafeMath"
                },
                "id": 6,
                "name": "UserDefinedTypeName",
                "src": "188:8:0"
              },
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 7,
                "name": "ElementaryTypeName",
                "src": "201:7:0"
              }
            ],
            "id": 8,
            "name": "UsingForDirective",
            "src": "182:27:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "overrides": null,
              "scope": 167,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_proxyRegistryAddress",
                      "overrides": null,
                      "scope": 19,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 9,
                        "name": "ElementaryTypeName",
                        "src": "227:7:0"
                      }
                    ],
                    "id": 10,
                    "name": "VariableDeclaration",
                    "src": "227:29:0"
                  }
                ],
                "id": 11,
                "name": "ParameterList",
                "src": "226:31:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 17,
                "name": "ParameterList",
                "src": "341:0:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 302,
                      "type": "type(contract ERC721Tradable)",
                      "value": "ERC721Tradable"
                    },
                    "id": 12,
                    "name": "Identifier",
                    "src": "281:14:0"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "44617070657273",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"Dappers\"",
                      "value": "Dappers"
                    },
                    "id": 13,
                    "name": "Literal",
                    "src": "296:9:0"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "444150",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"DAP\"",
                      "value": "DAP"
                    },
                    "id": 14,
                    "name": "Literal",
                    "src": "307:5:0"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 10,
                      "type": "address",
                      "value": "_proxyRegistryAddress"
                    },
                    "id": 15,
                    "name": "Identifier",
                    "src": "314:21:0"
                  }
                ],
                "id": 16,
                "name": "ModifierInvocation",
                "src": "281:55:0"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 18,
                "name": "Block",
                "src": "341:2:0"
              }
            ],
            "id": 19,
            "name": "FunctionDefinition",
            "src": "215:128:0"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "8462151c",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "tokensOfOwner",
              "overrides": null,
              "scope": 167,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_owner",
                      "overrides": null,
                      "scope": 83,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 20,
                        "name": "ElementaryTypeName",
                        "src": "372:7:0"
                      }
                    ],
                    "id": 21,
                    "name": "VariableDeclaration",
                    "src": "372:14:0"
                  }
                ],
                "id": 22,
                "name": "ParameterList",
                "src": "371:16:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "overrides": null,
                      "scope": 83,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "uint256[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 23,
                            "name": "ElementaryTypeName",
                            "src": "435:7:0"
                          }
                        ],
                        "id": 24,
                        "name": "ArrayTypeName",
                        "src": "435:9:0"
                      }
                    ],
                    "id": 25,
                    "name": "VariableDeclaration",
                    "src": "435:16:0"
                  }
                ],
                "id": 26,
                "name": "ParameterList",
                "src": "434:18:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        28
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "tokenCount",
                          "overrides": null,
                          "scope": 82,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 27,
                            "name": "ElementaryTypeName",
                            "src": "467:7:0"
                          }
                        ],
                        "id": 28,
                        "name": "VariableDeclaration",
                        "src": "467:18:0"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1444,
                              "type": "function (address) view returns (uint256)",
                              "value": "balanceOf"
                            },
                            "id": 29,
                            "name": "Identifier",
                            "src": "488:9:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 21,
                              "type": "address",
                              "value": "_owner"
                            },
                            "id": 30,
                            "name": "Identifier",
                            "src": "498:6:0"
                          }
                        ],
                        "id": 31,
                        "name": "FunctionCall",
                        "src": "488:17:0"
                      }
                    ],
                    "id": 32,
                    "name": "VariableDeclarationStatement",
                    "src": "467:38:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "==",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 28,
                              "type": "uint256",
                              "value": "tokenCount"
                            },
                            "id": 33,
                            "name": "Identifier",
                            "src": "519:10:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 34,
                            "name": "Literal",
                            "src": "533:1:0"
                          }
                        ],
                        "id": 35,
                        "name": "BinaryOperation",
                        "src": "519:15:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "functionReturnParameters": 26
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "uint256[] memory",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "function (uint256) pure returns (uint256[] memory)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "length": null,
                                          "type": "uint256[]"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "name": "uint256",
                                              "type": "uint256"
                                            },
                                            "id": 36,
                                            "name": "ElementaryTypeName",
                                            "src": "561:7:0"
                                          }
                                        ],
                                        "id": 37,
                                        "name": "ArrayTypeName",
                                        "src": "561:9:0"
                                      }
                                    ],
                                    "id": 38,
                                    "name": "NewExpression",
                                    "src": "557:13:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 39,
                                    "name": "Literal",
                                    "src": "571:1:0"
                                  }
                                ],
                                "id": 40,
                                "name": "FunctionCall",
                                "src": "557:16:0"
                              }
                            ],
                            "id": 41,
                            "name": "Return",
                            "src": "550:23:0"
                          }
                        ],
                        "id": 42,
                        "name": "Block",
                        "src": "536:48:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "assignments": [
                                47
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "result",
                                  "overrides": null,
                                  "scope": 80,
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "type": "uint256[]",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "length": null,
                                      "type": "uint256[]"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "uint256",
                                          "type": "uint256"
                                        },
                                        "id": 45,
                                        "name": "ElementaryTypeName",
                                        "src": "604:7:0"
                                      }
                                    ],
                                    "id": 46,
                                    "name": "ArrayTypeName",
                                    "src": "604:9:0"
                                  }
                                ],
                                "id": 47,
                                "name": "VariableDeclaration",
                                "src": "604:23:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "uint256[] memory",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "function (uint256) pure returns (uint256[] memory)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "length": null,
                                          "type": "uint256[]"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "name": "uint256",
                                              "type": "uint256"
                                            },
                                            "id": 48,
                                            "name": "ElementaryTypeName",
                                            "src": "634:7:0"
                                          }
                                        ],
                                        "id": 49,
                                        "name": "ArrayTypeName",
                                        "src": "634:9:0"
                                      }
                                    ],
                                    "id": 50,
                                    "name": "NewExpression",
                                    "src": "630:13:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 28,
                                      "type": "uint256",
                                      "value": "tokenCount"
                                    },
                                    "id": 51,
                                    "name": "Identifier",
                                    "src": "644:10:0"
                                  }
                                ],
                                "id": 52,
                                "name": "FunctionCall",
                                "src": "630:25:0"
                              }
                            ],
                            "id": 53,
                            "name": "VariableDeclarationStatement",
                            "src": "604:51:0"
                          },
                          {
                            "attributes": {
                              "assignments": [
                                55
                              ],
                              "initialValue": null
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "index",
                                  "overrides": null,
                                  "scope": 80,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "uint256",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256",
                                      "type": "uint256"
                                    },
                                    "id": 54,
                                    "name": "ElementaryTypeName",
                                    "src": "669:7:0"
                                  }
                                ],
                                "id": 55,
                                "name": "VariableDeclaration",
                                "src": "669:13:0"
                              }
                            ],
                            "id": 56,
                            "name": "VariableDeclarationStatement",
                            "src": "669:13:0"
                          },
                          {
                            "children": [
                              {
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "=",
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 55,
                                          "type": "uint256",
                                          "value": "index"
                                        },
                                        "id": 57,
                                        "name": "Identifier",
                                        "src": "701:5:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "30",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 0",
                                          "value": "0"
                                        },
                                        "id": 58,
                                        "name": "Literal",
                                        "src": "709:1:0"
                                      }
                                    ],
                                    "id": 59,
                                    "name": "Assignment",
                                    "src": "701:9:0"
                                  }
                                ],
                                "id": 60,
                                "name": "ExpressionStatement",
                                "src": "701:9:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "<",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 55,
                                      "type": "uint256",
                                      "value": "index"
                                    },
                                    "id": 61,
                                    "name": "Identifier",
                                    "src": "712:5:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 28,
                                      "type": "uint256",
                                      "value": "tokenCount"
                                    },
                                    "id": 62,
                                    "name": "Identifier",
                                    "src": "720:10:0"
                                  }
                                ],
                                "id": 63,
                                "name": "BinaryOperation",
                                "src": "712:18:0"
                              },
                              {
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "++",
                                      "prefix": false,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 55,
                                          "type": "uint256",
                                          "value": "index"
                                        },
                                        "id": 64,
                                        "name": "Identifier",
                                        "src": "732:5:0"
                                      }
                                    ],
                                    "id": 65,
                                    "name": "UnaryOperation",
                                    "src": "732:7:0"
                                  }
                                ],
                                "id": 66,
                                "name": "ExpressionStatement",
                                "src": "732:7:0"
                              },
                              {
                                "children": [
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "=",
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 47,
                                                  "type": "uint256[] memory",
                                                  "value": "result"
                                                },
                                                "id": 67,
                                                "name": "Identifier",
                                                "src": "759:6:0"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 55,
                                                  "type": "uint256",
                                                  "value": "index"
                                                },
                                                "id": 68,
                                                "name": "Identifier",
                                                "src": "766:5:0"
                                              }
                                            ],
                                            "id": 69,
                                            "name": "IndexAccess",
                                            "src": "759:13:0"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "isStructConstructorCall": false,
                                              "lValueRequested": false,
                                              "names": [
                                                null
                                              ],
                                              "tryCall": false,
                                              "type": "uint256",
                                              "type_conversion": false
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    },
                                                    {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  ],
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 1576,
                                                  "type": "function (address,uint256) view returns (uint256)",
                                                  "value": "tokenOfOwnerByIndex"
                                                },
                                                "id": 70,
                                                "name": "Identifier",
                                                "src": "775:19:0"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 21,
                                                  "type": "address",
                                                  "value": "_owner"
                                                },
                                                "id": 71,
                                                "name": "Identifier",
                                                "src": "795:6:0"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 55,
                                                  "type": "uint256",
                                                  "value": "index"
                                                },
                                                "id": 72,
                                                "name": "Identifier",
                                                "src": "803:5:0"
                                              }
                                            ],
                                            "id": 73,
                                            "name": "FunctionCall",
                                            "src": "775:34:0"
                                          }
                                        ],
                                        "id": 74,
                                        "name": "Assignment",
                                        "src": "759:50:0"
                                      }
                                    ],
                                    "id": 75,
                                    "name": "ExpressionStatement",
                                    "src": "759:50:0"
                                  }
                                ],
                                "id": 76,
                                "name": "Block",
                                "src": "741:83:0"
                              }
                            ],
                            "id": 77,
                            "name": "ForStatement",
                            "src": "696:128:0"
                          },
                          {
                            "attributes": {
                              "functionReturnParameters": 26
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 47,
                                  "type": "uint256[] memory",
                                  "value": "result"
                                },
                                "id": 78,
                                "name": "Identifier",
                                "src": "844:6:0"
                              }
                            ],
                            "id": 79,
                            "name": "Return",
                            "src": "837:13:0"
                          }
                        ],
                        "id": 80,
                        "name": "Block",
                        "src": "590:271:0"
                      }
                    ],
                    "id": 81,
                    "name": "IfStatement",
                    "src": "515:346:0"
                  }
                ],
                "id": 82,
                "name": "Block",
                "src": "457:410:0"
              }
            ],
            "id": 83,
            "name": "FunctionDefinition",
            "src": "349:518:0"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "a64bae40",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mintDap",
              "overrides": null,
              "scope": 167,
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "dapTokens",
                      "overrides": null,
                      "scope": 114,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "uint256[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 84,
                            "name": "ElementaryTypeName",
                            "src": "891:7:0"
                          }
                        ],
                        "id": 85,
                        "name": "ArrayTypeName",
                        "src": "891:9:0"
                      }
                    ],
                    "id": 86,
                    "name": "VariableDeclaration",
                    "src": "891:26:0"
                  }
                ],
                "id": 87,
                "name": "ParameterList",
                "src": "890:28:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 88,
                "name": "ParameterList",
                "src": "934:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            90
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "name": "i",
                              "overrides": null,
                              "scope": 112,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "value": null,
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint",
                                  "type": "uint256"
                                },
                                "id": 89,
                                "name": "ElementaryTypeName",
                                "src": "947:4:0"
                              }
                            ],
                            "id": 90,
                            "name": "VariableDeclaration",
                            "src": "947:6:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 91,
                            "name": "Literal",
                            "src": "956:1:0"
                          }
                        ],
                        "id": 92,
                        "name": "VariableDeclarationStatement",
                        "src": "947:10:0"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 90,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 93,
                            "name": "Identifier",
                            "src": "959:1:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 86,
                                  "type": "uint256[] memory",
                                  "value": "dapTokens"
                                },
                                "id": 94,
                                "name": "Identifier",
                                "src": "963:9:0"
                              }
                            ],
                            "id": 95,
                            "name": "MemberAccess",
                            "src": "963:16:0"
                          }
                        ],
                        "id": 96,
                        "name": "BinaryOperation",
                        "src": "959:20:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 90,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 97,
                                "name": "Identifier",
                                "src": "981:1:0"
                              }
                            ],
                            "id": 98,
                            "name": "UnaryOperation",
                            "src": "981:3:0"
                          }
                        ],
                        "id": 99,
                        "name": "ExpressionStatement",
                        "src": "981:3:0"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 128,
                                      "type": "function (address,uint256)",
                                      "value": "mintToken"
                                    },
                                    "id": 100,
                                    "name": "Identifier",
                                    "src": "998:9:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": -15,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 101,
                                        "name": "Identifier",
                                        "src": "1008:3:0"
                                      }
                                    ],
                                    "id": 102,
                                    "name": "MemberAccess",
                                    "src": "1008:10:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 86,
                                          "type": "uint256[] memory",
                                          "value": "dapTokens"
                                        },
                                        "id": 103,
                                        "name": "Identifier",
                                        "src": "1020:9:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 90,
                                          "type": "uint256",
                                          "value": "i"
                                        },
                                        "id": 104,
                                        "name": "Identifier",
                                        "src": "1030:1:0"
                                      }
                                    ],
                                    "id": 105,
                                    "name": "IndexAccess",
                                    "src": "1020:12:0"
                                  }
                                ],
                                "id": 106,
                                "name": "FunctionCall",
                                "src": "998:35:0"
                              }
                            ],
                            "id": 107,
                            "name": "ExpressionStatement",
                            "src": "998:35:0"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 229,
                                      "type": "function ()",
                                      "value": "_incrementTokenCount"
                                    },
                                    "id": 108,
                                    "name": "Identifier",
                                    "src": "1045:20:0"
                                  }
                                ],
                                "id": 109,
                                "name": "FunctionCall",
                                "src": "1045:22:0"
                              }
                            ],
                            "id": 110,
                            "name": "ExpressionStatement",
                            "src": "1045:22:0"
                          }
                        ],
                        "id": 111,
                        "name": "Block",
                        "src": "986:90:0"
                      }
                    ],
                    "id": 112,
                    "name": "ForStatement",
                    "src": "942:134:0"
                  }
                ],
                "id": 113,
                "name": "Block",
                "src": "934:148:0"
              }
            ],
            "id": 114,
            "name": "FunctionDefinition",
            "src": "874:208:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mintToken",
              "overrides": null,
              "scope": 167,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "private"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_to",
                      "overrides": null,
                      "scope": 128,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 115,
                        "name": "ElementaryTypeName",
                        "src": "1108:7:0"
                      }
                    ],
                    "id": 116,
                    "name": "VariableDeclaration",
                    "src": "1108:11:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "dapTokenId",
                      "overrides": null,
                      "scope": 128,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 117,
                        "name": "ElementaryTypeName",
                        "src": "1121:7:0"
                      }
                    ],
                    "id": 118,
                    "name": "VariableDeclaration",
                    "src": "1121:18:0"
                  }
                ],
                "id": 119,
                "name": "ParameterList",
                "src": "1107:33:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 120,
                "name": "ParameterList",
                "src": "1149:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                1900,
                                1929
                              ],
                              "referencedDeclaration": 1900,
                              "type": "function (address,uint256)",
                              "value": "_safeMint"
                            },
                            "id": 121,
                            "name": "Identifier",
                            "src": "1159:9:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 122,
                                "name": "Identifier",
                                "src": "1169:3:0"
                              }
                            ],
                            "id": 123,
                            "name": "MemberAccess",
                            "src": "1169:10:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 118,
                              "type": "uint256",
                              "value": "dapTokenId"
                            },
                            "id": 124,
                            "name": "Identifier",
                            "src": "1181:10:0"
                          }
                        ],
                        "id": 125,
                        "name": "FunctionCall",
                        "src": "1159:33:0"
                      }
                    ],
                    "id": 126,
                    "name": "ExpressionStatement",
                    "src": "1159:33:0"
                  }
                ],
                "id": 127,
                "name": "Block",
                "src": "1149:50:0"
              }
            ],
            "id": 128,
            "name": "FunctionDefinition",
            "src": "1089:110:0"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "853828b6",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "withdrawAll",
              "overrides": null,
              "scope": 167,
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 129,
                "name": "ParameterList",
                "src": "1225:2:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 132,
                "name": "ParameterList",
                "src": "1253:0:0"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 838,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 130,
                    "name": "Identifier",
                    "src": "1243:9:0"
                  }
                ],
                "id": 131,
                "name": "ModifierInvocation",
                "src": "1243:9:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 133,
                            "name": "Identifier",
                            "src": "1263:7:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "send",
                                  "referencedDeclaration": null,
                                  "type": "function (uint256) returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "address payable",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address_payable",
                                              "typeString": "address payable"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(address payable)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "name": "address",
                                              "stateMutability": "payable",
                                              "type": null
                                            },
                                            "id": 134,
                                            "name": "ElementaryTypeName",
                                            "src": "1271:8:0"
                                          }
                                        ],
                                        "id": 135,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "1271:8:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sender",
                                          "referencedDeclaration": null,
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": -15,
                                              "type": "msg",
                                              "value": "msg"
                                            },
                                            "id": 136,
                                            "name": "Identifier",
                                            "src": "1279:3:0"
                                          }
                                        ],
                                        "id": 137,
                                        "name": "MemberAccess",
                                        "src": "1279:10:0"
                                      }
                                    ],
                                    "id": 138,
                                    "name": "FunctionCall",
                                    "src": "1271:19:0"
                                  }
                                ],
                                "id": 139,
                                "name": "MemberAccess",
                                "src": "1271:24:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "balance",
                                  "referencedDeclaration": null,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "address",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_Dapper_$167",
                                              "typeString": "contract Dapper"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(address)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "name": "address",
                                              "type": null
                                            },
                                            "id": 140,
                                            "name": "ElementaryTypeName",
                                            "src": "1296:7:0"
                                          }
                                        ],
                                        "id": 141,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "1296:7:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": -28,
                                          "type": "contract Dapper",
                                          "value": "this"
                                        },
                                        "id": 142,
                                        "name": "Identifier",
                                        "src": "1304:4:0"
                                      }
                                    ],
                                    "id": 143,
                                    "name": "FunctionCall",
                                    "src": "1296:13:0"
                                  }
                                ],
                                "id": 144,
                                "name": "MemberAccess",
                                "src": "1296:21:0"
                              }
                            ],
                            "id": 145,
                            "name": "FunctionCall",
                            "src": "1271:47:0"
                          }
                        ],
                        "id": 146,
                        "name": "FunctionCall",
                        "src": "1263:56:0"
                      }
                    ],
                    "id": 147,
                    "name": "ExpressionStatement",
                    "src": "1263:56:0"
                  }
                ],
                "id": 148,
                "name": "Block",
                "src": "1253:73:0"
              }
            ],
            "id": 149,
            "name": "FunctionDefinition",
            "src": "1205:121:0"
          },
          {
            "attributes": {
              "baseFunctions": [
                245
              ],
              "documentation": null,
              "functionSelector": "d547cfb7",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "baseTokenURI",
              "scope": 167,
              "stateMutability": "pure",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 151,
                "name": "OverrideSpecifier",
                "src": "1368:8:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 150,
                "name": "ParameterList",
                "src": "1353:2:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "overrides": null,
                      "scope": 158,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 152,
                        "name": "ElementaryTypeName",
                        "src": "1386:6:0"
                      }
                    ],
                    "id": 153,
                    "name": "VariableDeclaration",
                    "src": "1386:13:0"
                  }
                ],
                "id": 154,
                "name": "ParameterList",
                "src": "1385:15:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 154
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "687474703a2f2f6461707065722d6261636b656e642e76657263656c2e6170702f6170692f6f70656e7365612f",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "string",
                          "type": "literal_string \"http://dapper-backend.vercel.app/api/opensea/\"",
                          "value": "http://dapper-backend.vercel.app/api/opensea/"
                        },
                        "id": 155,
                        "name": "Literal",
                        "src": "1418:47:0"
                      }
                    ],
                    "id": 156,
                    "name": "Return",
                    "src": "1411:54:0"
                  }
                ],
                "id": 157,
                "name": "Block",
                "src": "1401:71:0"
              }
            ],
            "id": 158,
            "name": "FunctionDefinition",
            "src": "1332:140:0"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "e8a3d485",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "contractURI",
              "overrides": null,
              "scope": 167,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 159,
                "name": "ParameterList",
                "src": "1498:2:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "overrides": null,
                      "scope": 166,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 160,
                        "name": "ElementaryTypeName",
                        "src": "1522:6:0"
                      }
                    ],
                    "id": 161,
                    "name": "VariableDeclaration",
                    "src": "1522:13:0"
                  }
                ],
                "id": 162,
                "name": "ParameterList",
                "src": "1521:15:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 162
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "687474703a2f2f6461707065722d6261636b656e642e76657263656c2e6170702f6170692f6461707065724465736372697074696f6e",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "string",
                          "type": "literal_string \"http://dapper-backend.vercel.app/api/dapperDescription\"",
                          "value": "http://dapper-backend.vercel.app/api/dapperDescription"
                        },
                        "id": 163,
                        "name": "Literal",
                        "src": "1554:56:0"
                      }
                    ],
                    "id": 164,
                    "name": "Return",
                    "src": "1547:63:0"
                  }
                ],
                "id": 165,
                "name": "Block",
                "src": "1537:80:0"
              }
            ],
            "id": 166,
            "name": "FunctionDefinition",
            "src": "1478:139:0"
          }
        ],
        "id": 167,
        "name": "ContractDefinition",
        "src": "142:1477:0"
      }
    ],
    "id": 168,
    "name": "SourceUnit",
    "src": "33:1586:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.3+commit.8dda9521.Emscripten.clang"
  },
  "networks": {
    "80001": {
      "events": {},
      "links": {},
      "address": "0x8B6Ad06C44b1df5f72B3A4890B2D3bb9D5381B55",
      "transactionHash": "0x74bcf861ff6f5887664f12eb497c0ece66f54756ff2b330f5cf9d014d33f033b"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-08-15T05:51:11.293Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "notice": "Override isApprovedForAll to whitelist user's OpenSea proxy accounts to enable gas-less listings."
      }
    }
  }
}